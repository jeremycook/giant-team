import { DatabaseAlteration } from "./GiantTeam.DatabaseDefinition.Alterations.Models";

// DO NOT MODIFY BELOW THIS LINE
// Generated by GiantTeam.Tools

export interface AlterDatabaseInput {
    databaseName: string;
    changes: DatabaseAlteration[];
}

export interface AlterDatabaseOutput {
}

export interface CreateSpaceInput {
    databaseName: string;
    name: string;
}

export interface CreateSpaceResult {
    nodeId: string;
}

export interface FetchRecords {
    sql: string | null;
    columns: FetchRecordsColumn[];
    records: any[][];
}

export interface FetchRecordsColumn {
    name: string;
    dataType: string;
    nullable: boolean;
}

export interface FetchRecordsInput {
    verbose: boolean | null;
    database: string;
    schema: string;
    table: string;
    columns: FetchRecordsInputColumn[] | null;
    filters: FetchRecordsInputRangeFilter[] | null;
    skip: number | null;
    take: number | null;
}

export interface FetchRecordsInputColumn {
    name: string;
    position: number | null;
    sort: Sort;
    visible: boolean | null;
}

export interface FetchRecordsInputFilter {
    $type: string;
    column: string;
}

export interface FetchRecordsInputOrder {
    column: string;
    desc: boolean | null;
}

export interface FetchRecordsInputRangeFilter extends FetchRecordsInputFilter {
    $type: 'FetchRecordsInputRangeFilter';
    lowerValue: string;
    upperValue: string;
    column: string;
}

export interface ImportDataInput {
    database: string;
    schema: string | null;
    table: string | null;
    createTableIfNotExists: boolean | null;
    data: string | null;
}

export interface ImportDataOutput {
    schema: string;
    table: string;
}

export interface QueryDatabaseInput {
    databaseName: string;
    sql: string;
}

export enum Sort {
    Unsorted = 0,
    Asc = 1,
    Desc = 2,
}