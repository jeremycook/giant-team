// DO NOT MODIFY BELOW THIS LINE
// Generated by GiantTeam.Tools

export interface File {
    inode: Inode;
    contentType: string;
    data: string;
}

export interface Inode {
    inodeTypeId: string;
    inodeId: string;
    parentInodeId: string;
    name: string;
    uglyName: string;
    created: Date;
    path: string;
    childrenConstraints: InodeChildConstraint[];
    children: Inode[] | null;
}

export interface InodeAccess {
    dbRole: string;
    permissions: string[];
}

export interface InodeChildConstraint {
    inodeTypeId: string;
}

export enum InodeId {
    Root = '00000000-0000-0000-0000-000000000000',
    Etc = '3e544ebc-f30a-471f-a8ec-f9e3ac84f19a',
}

export interface InodeType {
    inodeTypeId: string;
    constraints: InodeTypeConstraint[];
}

export interface InodeTypeConstraint {
    parentInodeTypeId: string;
}

export enum InodeTypeId {
    Root = 'Root',
    Space = 'Space',
    Folder = 'Folder',
    File = 'File',
    Table = 'Table',
}

export enum PermissionId {
    Read = 'r',
    Append = 'a',
    Write = 'w',
    Delete = 'd',
    Drop = 'D',
    Execute = 'x',
    Alter = 'N',
    ControlAccess = 'C',
    Ownership = 'o',
}

export interface Role {
    roleId: string;
    name: string;
    created: Date;
}

export enum SchemaPermissionId {
    ALL = 'ALL',
    CREATE = 'CREATE',
    USAGE = 'USAGE',
    R_USAGE = 'r',
    A_CREATE = 'a',
}

export interface Space {
    inode: Inode;
}